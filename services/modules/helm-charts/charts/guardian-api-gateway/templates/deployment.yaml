apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "guardian-api-gateway.fullname" . }}
  labels:
    {{- include "guardian-api-gateway.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "guardian-api-gateway.selectorLabels" . | nindent 6 }}
  strategy: 
    type: Recreate
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "guardian-api-gateway.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: 'p3002'
              containerPort: 3002
              protocol: TCP
          command: ["/bin/sh"]
          args: ["entrypoint.sh"]
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources: 
            limits:
              cpu: "{{ .Values.resources.cpu}}"
              memory: "{{ .Values.resources.memory}}"
            requests:
              cpu: "{{ .Values.resources.cpu}}"
              memory: "{{ .Values.resources.memory}}"

          envFrom:
            {{- if eq .Values.global.guardian.enable_apm_name "newrelic" }}
            - configMapRef:
                name: guardian-extensions-newrelic
            {{- end}}
            - configMapRef:
                name: {{ include "guardian-api-gateway.fullname" . }}-{{ .Release.Revision }}         
          volumeMounts:
            - name: guardian-extensions-files
              readOnly: true
              mountPath: /usr/api-gateway/guardian-healthcheck.js
              subPath: guardian-healthcheck.js
            - name: guardian-extensions-files
              readOnly: true
              mountPath: /usr/api-gateway/entrypoint.sh
              subPath: entrypoint.sh
            
            {{- if eq .Values.global.guardian.enable_apm_name "newrelic" }}
            - name: guardian-extensions-files
              readOnly: true
              mountPath: /usr/api-gateway/node_modules/@guardian/common/dist/mq/message-broker-channel.js
              subPath: message-broker-channel.js
            {{- end }}

      volumes:
        - name: guardian-extensions-files
          configMap:
            name: guardian-extensions-files
            items:
              - key: entrypoint.sh
                path: entrypoint.sh
              - key: message-broker-channel.js
                path: message-broker-channel.js     
              - key: guardian-healthcheck.js
                path: guardian-healthcheck.js
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

